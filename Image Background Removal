#!/usr/bin/env python3
import os
import sys

script_dir = os.path.dirname(os.path.abspath(__file__))
venv_path = os.path.join(script_dir, 'venv', 'bin', 'python')
sys.executable = venv_path

from torchvision import transforms
from transformers import pipeline, AutoModelForImageSegmentation
import torch
from pathlib import Path
from PIL import Image

### required: transformers, torchvision, scikit-image, opencv-python-headless, pillow, numpy, kornia, timm

def main(file_arg):

    # 2) Open input and set up output
    input_path = Path(file_arg)
    output_path = os.path.join(input_path.parent, input_path.stem + "_converted.png")

    model = AutoModelForImageSegmentation.from_pretrained('briaai/RMBG-2.0', trust_remote_code=True)
    torch.set_float32_matmul_precision(['high', 'highest'][0])
    model.to('cuda')
    model.eval()

    # Data settings
    image_size = (1024, 1024)
    transform_image = transforms.Compose([
        transforms.Resize(image_size),
        transforms.ToTensor(),
        transforms.Normalize([0.485, 0.456, 0.406], [0.229, 0.224, 0.225])
    ])

    image = Image.open(str(input_path))
    input_images = transform_image(image).unsqueeze(0).to('cuda')

    with torch.no_grad():
        preds = model(input_images)[-1].sigmoid().cpu()
    pred = preds[0].squeeze()
    pred_pil = transforms.ToPILImage()(pred)
    mask = pred_pil.resize(image.size)
    image.putalpha(mask)

    image.save(output_path)

if __name__ == "__main__":
    # for file_arg in sys.argv[1:]:
    #     main(file_arg)
    main('/home/nicolas/Downloads/Omega-1-001/Omega/PXL_20230624_195809433.NIGHT.jpg')